
Starting Training....
In Forward of Neck
len(feats) =  4
len(f):  torch.Size([96, 2048, 16, 16])
len(f):  torch.Size([96, 1024, 32, 32])
len(f):  torch.Size([96, 512, 64, 64])
len(f):  torch.Size([96, 256, 128, 128])
Traceback (most recent call last):
  File "/home/ubuntu/VGTR/main.py", line 235, in <module>
    train(args)
  File "/home/ubuntu/VGTR/main.py", line 177, in train
    train_epoch(args, train_loader, model, optimizer, epoch, criterion, args.size)
  File "/home/ubuntu/VGTR/work/engine.py", line 43, in train_epoch
    pred_box = model(image, word_id)  # [bs, C, H, W]
  File "/home/ubuntu/anaconda3/envs/project/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/ubuntu/anaconda3/envs/project/lib/python3.9/site-packages/torch/nn/parallel/data_parallel.py", line 166, in forward
    return self.module(*inputs[0], **kwargs[0])
  File "/home/ubuntu/anaconda3/envs/project/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/ubuntu/VGTR/work/model/grounding_model.py", line 33, in forward
    img_feature, pooled_features = self.visual_encoder(img)
  File "/home/ubuntu/anaconda3/envs/project/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/ubuntu/VGTR/work/model/backbone/visual_backbone.py", line 173, in forward
    out, feats = self.neck(self.cnn(img))
  File "/home/ubuntu/anaconda3/envs/project/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/ubuntu/VGTR/work/model/backbone/visual_backbone.py", line 149, in forward
    out = self.updown_conv[i-1](self.upsample_add(out, feats[i]))
  File "/home/ubuntu/VGTR/work/model/backbone/visual_backbone.py", line 119, in upsample_add
    return torch.nn.functional.interpolate(feat1, size=(H, W), mode='bilinear',
  File "/home/ubuntu/anaconda3/envs/project/lib/python3.9/site-packages/torch/nn/functional.py", line 3919, in interpolate
    return torch._C._nn.upsample_bilinear2d(input, output_size, align_corners, scale_factors)
RuntimeError: CUDA out of memory. Tried to allocate 768.00 MiB (GPU 0; 14.76 GiB total capacity; 13.31 GiB already allocated; 191.75 MiB free; 13.50 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF